{"ast":null,"code":"var _jsxFileName = \"/home/avinesh/Documents/gith/port1/client/src/Components/Github/GithubApi.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GithubApi extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: []\n    };\n\n    this.callBackendApi = async () => {\n      const response = await fetch('/data');\n      const body = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n\n      return body;\n    };\n  }\n\n  // used to render something as soon as the page renders \n  componentDidMount() {\n    this.callBackendApi().then(res => this.setState({\n      data: res\n    }));\n  } // fetching the GET route from the Express server which matches the GET route from server.js\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Hi, \", items.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 24\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default GithubApi;","map":{"version":3,"sources":["/home/avinesh/Documents/gith/port1/client/src/Components/Github/GithubApi.js"],"names":["React","Component","GithubApi","state","data","callBackendApi","response","fetch","body","json","status","Error","message","componentDidMount","then","res","setState","render","items","map","item","index"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;AAGA,MAAMC,SAAN,SAAwBD,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCE,KADgC,GACxB;AACJC,MAAAA,IAAI,EAAE;AADF,KADwB;;AAAA,SAY9BC,cAZ8B,GAYb,YAAY;AAC3B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,OAAD,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AACA,UAAIH,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,cAAMC,KAAK,CAACH,IAAI,CAACI,OAAN,CAAX;AACD;;AACD,aAAOJ,IAAP;AACD,KAnB6B;AAAA;;AAK9B;AACAK,EAAAA,iBAAiB,GAAG;AAClB,SAAKR,cAAL,GACGS,IADH,CACQC,GAAG,IAAI,KAAKC,QAAL,CAAc;AAACZ,MAAAA,IAAI,EAAEW;AAAP,KAAd,CADf;AAED,GAT6B,CAW5B;;;AAWFE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,yBACOC,KAAK,CAACC,GAAN,CAAU,CAACC,IAAD,EAAMC,KAAN,KAAc;AACvB,4BAAO;AAAA,oBAAiBD;AAAjB,WAASC,KAAT;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFA,CADP;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAjC6B;;AAoChC,eAAenB,SAAf","sourcesContent":["import React, {Component} from \"react\";\n\n\nclass GithubApi extends Component {\n  state = {\n      data: []\n    };\n    \n    // used to render something as soon as the page renders \n    componentDidMount() {\n      this.callBackendApi()\n        .then(res => this.setState({data: res}))\n    }\n    \n      // fetching the GET route from the Express server which matches the GET route from server.js\n    callBackendApi = async () => {\n      const response = await fetch('/data');\n      const body = await response.json();\n      if (response.status !== 200) {\n        throw Error(body.message) \n      }\n      return body;\n    };\n  \n    \n    render() {\n      return (\n        <div>\n          Hi, {items.map((item,index)=>{\n                return <li key={index}>{item}</li>\n              })}\n            \n            \n            \n        </div>\n      );\n    }\n  }\n  \n  export default GithubApi;"]},"metadata":{},"sourceType":"module"}