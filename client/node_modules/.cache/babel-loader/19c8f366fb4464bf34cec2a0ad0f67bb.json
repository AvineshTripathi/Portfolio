{"ast":null,"code":"var _jsxFileName = \"/home/avinesh/Documents/gith/port1/client/src/Components/Github/GithubApi.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GithubApi extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: null,\n      issue: null\n    };\n\n    this.callForExpress = async () => {\n      const response = await fetch('/express');\n      const body = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n\n      return body;\n    };\n\n    this.callForIssue = async () => {\n      const response = await fetch('/issue');\n      const body = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n\n      return body;\n    };\n  }\n\n  componentDidMount() {\n    this.callForExpress().then(res => this.setState({\n      data: res.express\n    })).catch(err => console.log(err));\n    this.callForIssue().then(respo => this.setState({\n      issue: res\n    })).catch(err => console.log(err));\n  } // fetching the GET route from the Express server which matches the GET route from server.js\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Hi, \", this.state.data, this.state.issue]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default GithubApi;","map":{"version":3,"sources":["/home/avinesh/Documents/gith/port1/client/src/Components/Github/GithubApi.js"],"names":["React","Component","GithubApi","state","data","issue","callForExpress","response","fetch","body","json","status","Error","message","callForIssue","componentDidMount","then","res","setState","express","catch","err","console","log","respo","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;AAGA,MAAMC,SAAN,SAAwBD,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCE,KADgC,GACxB;AACJC,MAAAA,IAAI,EAAE,IADF;AAEJC,MAAAA,KAAK,EAAE;AAFH,KADwB;;AAAA,SAe9BC,cAf8B,GAeb,YAAY;AAC3B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,UAAD,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AAEA,UAAIH,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,cAAMC,KAAK,CAACH,IAAI,CAACI,OAAN,CAAX;AACD;;AACD,aAAOJ,IAAP;AACD,KAvB6B;;AAAA,SAyB9BK,YAzB8B,GAyBf,YAAY;AACzB,YAAMP,QAAQ,GAAE,MAAMC,KAAK,CAAC,QAAD,CAA3B;AACA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AAEA,UAAGH,QAAQ,CAACI,MAAT,KAAoB,GAAvB,EAA4B;AAC1B,cAAMC,KAAK,CAACH,IAAI,CAACI,OAAN,CAAX;AACD;;AACD,aAAOJ,IAAP;AACD,KAjC6B;AAAA;;AAM9BM,EAAAA,iBAAiB,GAAG;AAClB,SAAKT,cAAL,GACGU,IADH,CACQC,GAAG,IAAI,KAAKC,QAAL,CAAc;AAAEd,MAAAA,IAAI,EAAEa,GAAG,CAACE;AAAZ,KAAd,CADf,EAEGC,KAFH,CAESC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFhB;AAGA,SAAKP,YAAL,GACGE,IADH,CACQQ,KAAK,IAAI,KAAKN,QAAL,CAAc;AAAEb,MAAAA,KAAK,EAAEY;AAAT,KAAd,CADjB,EAEGG,KAFH,CAESC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFhB;AAGD,GAb6B,CAc5B;;;AAqBFI,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,yBACO,KAAKtB,KAAL,CAAWC,IADlB,EAEG,KAAKD,KAAL,CAAWE,KAFd;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AA1C6B;;AA6ChC,eAAeH,SAAf","sourcesContent":["import React, {Component} from \"react\";\n\n\nclass GithubApi extends Component {\n  state = {\n      data: null,\n      issue: null\n    };\n  \n    componentDidMount() {\n      this.callForExpress()\n        .then(res => this.setState({ data: res.express }))\n        .catch(err => console.log(err));\n      this.callForIssue()\n        .then(respo => this.setState({ issue: res}))\n        .catch(err => console.log(err));\n    }\n      // fetching the GET route from the Express server which matches the GET route from server.js\n    callForExpress = async () => {\n      const response = await fetch('/express');\n      const body = await response.json();\n  \n      if (response.status !== 200) {\n        throw Error(body.message) \n      }\n      return body;\n    };\n\n    callForIssue = async () => {\n      const response= await fetch('/issue');\n      const body = await response.json();\n\n      if(response.status !== 200) {\n        throw Error(body.message)\n      }\n      return body;\n    }\n  \n    render() {\n      return (\n        <div>\n          Hi, {this.state.data}\n          {this.state.issue}\n        </div>\n      );\n    }\n  }\n  \n  export default GithubApi;"]},"metadata":{},"sourceType":"module"}